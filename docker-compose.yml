version: "3.9"

networks:
  pht:
    ipam:
      config:
        - subnet: 172.18.0.0/24
services:
  db:
    image: postgres:14.0
    container_name: "Postgres_DB"
    restart: always
    environment:
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    networks:
      pht:
        ipv4_address: 172.18.0.2

  influxdb:
    image: influxdb:latest
    container_name: "InfluxDB"
    restart: always
    volumes:
      - influxdb2:/.influxdb2
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: admin1234
      DOCKER_INFLUXDB_INIT_ORG: pht
      DOCKER_INFLUXDB_INIT_BUCKET: phtbucket
    networks:
      pht:
        ipv4_address: 172.18.0.4

  mqtt:
    image: toke/mosquitto
    container_name: "MQTT"
    restart: always
    ports:
      - "1883:1883"
    expose:
      - "1883"
    networks:
      pht:
        ipv4_address: 172.18.0.3

  mqtt-bridge:
    build: ./mqtt_bridge
    container_name: "MQTT_Bridge"
    restart: always
    command: python /src/run.py
    volumes:
      - "./mqtt_bridge/src:/src"
    environment:
      BROKER: 172.18.0.3
      DB: 172.18.0.4
      TOKEN: ${INFLUX_TOKEN_ENV}
      BUCKET_NAME: phtbucket
      ORG: pht
    depends_on:
      - mqtt
      - influxdb
    networks:
      pht:
        ipv4_address: 172.18.0.5

  core_api:
    build: ./pht_backend
    container_name: "CoreAPI"
    restart: always
    depends_on:
      - influxdb
      - db
    ports: 
        - "8000:8000"
    volumes:
      - "./pht_backend/src:/src"
    environment:
      POSTGRES_LOGIN: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_URL: 172.18.0.2
      INFLUX: 172.18.0.4
      INFLUX_TOKEN: ${INFLUX_TOKEN_ENV}
      BUCKET_NAME: phtbucket
      ORG: pht
    networks:
      pht:
        ipv4_address: 172.18.0.6     
volumes:
  influxdb2:
